[tox]
envlist =
    coverage-erase
    py{3.12, 3.11, 3.10, 3.9, 3.8}
    coverage-report
    mypy
    docs

isolated_build = True

[testenv]
package = wheel
wheel_build_env = build_wheel

depends =
    py{3.12, 3.11, 3.10, 3.9, 3.8}: coverage-erase
deps = -rrequirements/test.txt
commands = coverage run -m pytest

[testenv:coverage-erase]
deps =
    coverage[toml]
skip_install = true
commands =
    coverage erase

[testenv:coverage-report{,-ci}]
depends = py{3.12, 3.11, 3.10, 3.9, 3.8}
deps =
    coverage[toml]
skip_install = true
commands_pre =
    - coverage combine
commands =
    coverage report
commands_post =
    !ci: coverage html --fail-under=0

[testenv:mypy]
deps = -rrequirements/mypy.txt
setenv =
    MYPY_FORCE_COLOR=1
commands = mypy

[testenv:docs]
base_python = py3.12
skip_install = true
deps = -rrequirements/docs.txt
commands =
    sphinx-build -aWEnqb html docs/ build/docs

[testenv:update]
skip_install = true
deps =
    poetry
    pre-commit
    upadup
commands =
    # Update poetry.lock, and the testing dependencies.
    poetry update
    poetry export --only=test --without-hashes --output requirements/test.txt
    poetry export --only=mypy --without-hashes --output requirements/mypy.txt
    poetry export --only=docs --without-hashes --output requirements/docs.txt

    # Update the pre-commit hooks and additional dependencies.
    pre-commit autoupdate
    upadup

[flake8]
max-line-length = 88
extend-ignore = E203
